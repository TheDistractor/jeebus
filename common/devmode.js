// Generated by CoffeeScript 1.7.1
(function() {
  var execFile, fatal, gin, spawn, watcher, _ref,
    __slice = [].slice;

  _ref = require('child_process'), execFile = _ref.execFile, spawn = _ref.spawn;

  fatal = function() {
    var args, s;
    s = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    console.error('\n[node] fatal error:', s);
    if (args.length) {
      console.error.apply(console, args);
    }
    return process.exit(1);
  };

  gin = spawn('gin', [], {
    stdio: [process.stdin, process.stdout, 'pipe']
  });

  gin.on('error', function(err) {
    if (err.code !== 'ENOENT') {
      fatal('cannot launch "gin"', err);
    }
    console.log('"gin" tool not found, installing...');
    return execFile('go', ['get', 'github.com/codegangsta/gin'], function(err, sout, serr) {
      if (err) {
        if (err.code === 'ENOENT') {
          fatal('"go" not found - please install it first, see http://golang.org/');
        }
        fatal('install of "gin" failed', serr);
      }
      gin = spawn('gin', [], {
        stdio: [process.stdin, process.stdout, 'pipe']
      });
      return gin.on('error', function(err) {
        return fatal('still cannot launch "gin" - is $GOPATH/bin in your $PATH?');
      });
    });
  });

  gin.on('close', function(code) {
    if (code > 0) {
      return fatal('unexpected termination of "gin", code: ' + code);
    }
  });

  watcher = function() {
    return console.log('[node] watching for file changes (NOT YET)');
  };

  setTimeout(watcher, 100);

}).call(this);
